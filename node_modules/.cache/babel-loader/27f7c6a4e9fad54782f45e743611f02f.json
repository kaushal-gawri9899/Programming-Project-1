{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Programming-Project-1/src/Components/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport SplitPane from 'react-split-pane'; // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import LooksOneIcon from '@material-ui/icons/LooksOne';\n// import LooksTwoIcon from '@material-ui/icons/LooksTwo';\n// import Looks3Icon from '@material-ui/icons/Looks3';\n\nimport { Typography } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme, makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport { StyleSheet, View } from 'react-native';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst greenTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#008000\",\n      contrastText: \"#fff\"\n    } //   secondary: { main: \"#03a9f4\", contrastText: \"#fff\" }\n\n  }\n}); // const greenTheme = createMuiTheme({ palette: { primary: green, contrastText: \"#fff\" } })\n\nconst styles = {\n  background: '#E1E1E1',\n  width: '2px',\n  cursor: 'col-resize',\n  margin: '0 1px',\n  height: '100%'\n};\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2)\n  },\n  resetContainer: {\n    padding: theme.spacing(3)\n  }\n}));\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Radio, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 15\n}, this)); // const stylesBorder = StyleSheet.create({\n//     viewStyleForLine: {\n//         borderBottomColor: \"black\", \n//         borderBottomWidth: StyleSheet.hairlineWidth, \n//         alignSelf:'stretch',\n//         width: \"100%\"\n//       }\n// })\n\nconst ColoredLine = ({\n  color\n}) => /*#__PURE__*/_jsxDEV(\"hr\", {\n  style: {\n    color: color,\n    backgroundColor: color,\n    height: 0.5\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 73,\n  columnNumber: 5\n}, this);\n\n_c = ColoredLine;\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: ['Josefin Sans', 'sans-serif'].join(',')\n  }\n});\n\nfunction getSteps() {\n  return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return `For each ad campaign that you create, you can control how much`;\n\n    case 1:\n      return 'An ad group contains one or more ads which target a shared set of keywords.';\n\n    case 2:\n      return `they're running and how to resolve approval issues.`;\n\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function CreatePost() {\n  _s();\n\n  const [page, setPageNumber] = useState(1);\n  const [selectedValue, setSelectedValue] = useState('a');\n  const [jobTitle, setTitle] = useState();\n  const [jobDescription, setDescription] = useState();\n  const [location, setLocation] = useState();\n  const [workExperince, setWorkExperince] = useState();\n  console.log(selectedValue);\n  console.log(page);\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userObject = {\n      jobTitle: jobTitle,\n      jobDescription: jobDescription,\n      location: location,\n      jobType: selectedValue,\n      workExperince: workExperince\n    };\n    console.log(userObject);\n    axios.post('http://0.0.0.0:5000/create', userObject).then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  if (activeStep === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: 100,\n        defaultSize: 300,\n        resizerStyle: styles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            orientation: \"vertical\",\n            children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: getStepContent(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.actionsContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      disabled: activeStep === 0,\n                      onClick: handleBack,\n                      className: classes.button,\n                      children: \"Back\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: handleNext,\n                      className: classes.button,\n                      size: \"large\" //   onClick={() => handleNext}\n                      ,\n                      value: 1,\n                      children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 39\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 35\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n            square: true,\n            elevation: 0,\n            className: classes.resetContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              className: classes.button,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 5,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              children: \"Write Your Job Posting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                borderBottomColor: '#E1E1E1',\n                borderBottomWidth: 2,\n                width: \"95%\",\n                alignItems: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"JOB TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"outlined-required\",\n              label: \"Required\",\n              value: jobTitle,\n              onChange: e => setTitle(e.target.value),\n              variant: \"outlined\",\n              style: {\n                width: 500\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: -11.3,\n            ml: 90,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"JOB TYPE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 1,\n            ml: 89,\n            children: [/*#__PURE__*/_jsxDEV(GreenRadio, {\n              checked: {\n                selectedValue\n              } === 'a',\n              onChange: () => setSelectedValue('a'),\n              name: \"radio-button-demo\",\n              inputProps: {\n                'aria-label': 'A'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"PART-TIME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(GreenRadio, {\n              checked: {\n                selectedValue\n              } === 'b',\n              onChange: () => setSelectedValue('b'),\n              name: \"radio-button-demo\",\n              inputProps: {\n                'aria-label': 'B'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"FULL-TIME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 7,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"JOB DESCRIPTION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"outlined-required\",\n              label: \"Required\",\n              value: jobDescription,\n              onChange: e => setDescription(e.target.value),\n              multiline: true,\n              rows: 15,\n              variant: \"outlined\",\n              style: {\n                width: 1000\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 6,\n            children: /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                borderBottomColor: '#E1E1E1',\n                borderBottomWidth: 2,\n                width: \"95%\",\n                alignItems: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 120,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n              theme: greenTheme,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"large\",\n                onClick: () => setPageNumber(2),\n                value: 1,\n                children: \"CONTINUE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this);\n  } // console.log(jobTitle);\n\n\n  if (activeStep === 1) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: 100,\n        defaultSize: 300,\n        resizerStyle: styles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            orientation: \"vertical\",\n            children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: getStepContent(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.actionsContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      disabled: activeStep === 0,\n                      onClick: handleBack,\n                      className: classes.button,\n                      children: \"Back\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 367,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: handleNext,\n                      className: classes.button,\n                      size: \"large\" //   onClick={() => handleNext}\n                      ,\n                      value: 1,\n                      children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 374,\n                      columnNumber: 34\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 28\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 22\n          }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n            square: true,\n            elevation: 0,\n            className: classes.resetContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              className: classes.button,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                borderBottomColor: '#E1E1E1',\n                borderBottomWidth: 2,\n                width: \"95%\",\n                alignItems: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"LOCATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"\",\n              label: \"Required\",\n              value: location,\n              onChange: e => setLocation(e.target.value),\n              defaultValue: \"Location\",\n              variant: \"outlined\",\n              style: {\n                width: 500\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h7\",\n              children: \"WORK EXPERINCE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"\",\n              label: \"Required\",\n              value: workExperince,\n              onChange: e => setWorkExperince(e.target.value),\n              defaultValue: \"Work Experince\",\n              variant: \"outlined\",\n              style: {\n                width: 500\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 2,\n            mt: 48,\n            children: /*#__PURE__*/_jsxDEV(View, {\n              style: {\n                borderBottomColor: '#E1E1E1',\n                borderBottomWidth: 2,\n                width: \"95%\",\n                alignItems: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            ml: 120,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n              theme: greenTheme,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"large\",\n                onClick: () => setPageNumber(3),\n                value: 1,\n                children: \"CONTINUE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 13\n    }, this);\n  } // console.log(location)\n\n\n  if (activeStep === 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SplitPane, {\n        split: \"vertical\",\n        minSize: 100,\n        defaultSize: 300,\n        resizerStyle: styles,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(Stepper, {\n            activeStep: activeStep,\n            orientation: \"vertical\",\n            children: steps.map((label, index) => /*#__PURE__*/_jsxDEV(Step, {\n              children: [/*#__PURE__*/_jsxDEV(StepLabel, {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 28\n              }, this), /*#__PURE__*/_jsxDEV(StepContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: getStepContent(index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 30\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.actionsContainer,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      disabled: activeStep === 0,\n                      onClick: handleBack,\n                      className: classes.button,\n                      children: \"Back\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      onClick: handleNext,\n                      className: classes.button,\n                      size: \"large\" //   onClick={() => handleNext}\n                      ,\n                      value: 1,\n                      children: activeStep === steps.length - 1 ? 'Finish' : 'Next'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 34\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 32\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 28\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 26\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 22\n          }, this), activeStep === steps.length && /*#__PURE__*/_jsxDEV(Paper, {\n            square: true,\n            elevation: 0,\n            className: classes.resetContainer,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: \"All steps completed - you're finished\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleReset,\n              className: classes.button,\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            ml: 120,\n            mt: 1,\n            children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n              theme: greenTheme,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleSubmit,\n                variant: \"contained\",\n                color: \"primary\",\n                size: \"large\",\n                children: \"POST JOB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(CreatePost, \"5eAq/lu6UKujBz+gSZEAzd2YmBY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = CreatePost;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColoredLine\");\n$RefreshReg$(_c2, \"CreatePost\");","map":{"version":3,"sources":["/Users/apple/Desktop/Programming-Project-1/src/Components/CreatePost.js"],"names":["React","useState","Box","SplitPane","Typography","MuiThemeProvider","createMuiTheme","makeStyles","withStyles","TextField","Paper","StyleSheet","View","green","Radio","Button","axios","Stepper","Step","StepLabel","StepContent","greenTheme","palette","primary","main","contrastText","styles","background","width","cursor","margin","height","useStyles","root","button","marginTop","theme","spacing","marginRight","actionsContainer","marginBottom","resetContainer","padding","GreenRadio","color","checked","props","ColoredLine","backgroundColor","typography","fontFamily","join","getSteps","getStepContent","step","CreatePost","page","setPageNumber","selectedValue","setSelectedValue","jobTitle","setTitle","jobDescription","setDescription","location","setLocation","workExperince","setWorkExperince","console","log","classes","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","handleReset","handleSubmit","e","preventDefault","userObject","jobType","post","then","res","data","catch","error","map","label","index","length","borderBottomColor","borderBottomWidth","alignItems","target","value"],"mappings":"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","sourcesContent":["import React, { useState} from 'react'\nimport Box from '@material-ui/core/Box';\nimport SplitPane from 'react-split-pane';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import LooksOneIcon from '@material-ui/icons/LooksOne';\n// import LooksTwoIcon from '@material-ui/icons/LooksTwo';\n// import Looks3Icon from '@material-ui/icons/Looks3';\nimport { Typography } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme,makeStyles,withStyles} from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport {StyleSheet,View } from 'react-native';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n      primary: { main: \"#008000\", contrastText: \"#fff\" },\n    //   secondary: { main: \"#03a9f4\", contrastText: \"#fff\" }\n    }\n});\n// const greenTheme = createMuiTheme({ palette: { primary: green, contrastText: \"#fff\" } })\nconst styles = {\n    background: '#E1E1E1',\n    width: '2px',\n    cursor: 'col-resize',\n    margin: '0 1px',\n    height: '100%',\n};\n\nconst useStyles = makeStyles(() => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n}));\n  \n\nconst GreenRadio = withStyles({\n    root: {\n      color: green[400],\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n  \n// const stylesBorder = StyleSheet.create({\n//     viewStyleForLine: {\n//         borderBottomColor: \"black\", \n//         borderBottomWidth: StyleSheet.hairlineWidth, \n//         alignSelf:'stretch',\n//         width: \"100%\"\n//       }\n// })\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\nconst theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Josefin Sans',\n        'sans-serif',\n      ].join(','),\n},});\n\nfunction getSteps() {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n  \nfunction getStepContent(step) {\n    switch (step) {\n      case 0:\n        return `For each ad campaign that you create, you can control how much`;\n      case 1:\n        return 'An ad group contains one or more ads which target a shared set of keywords.';\n      case 2:\n        return `they're running and how to resolve approval issues.`;\n      default:\n        return 'Unknown step';\n    }\n}\n  \nexport default function CreatePost() {\n    const [page, setPageNumber] = useState(1);\n    const [selectedValue, setSelectedValue] = useState('a');\n\n    const [jobTitle, setTitle] = useState();\n    const [jobDescription, setDescription] = useState();\n    const [location, setLocation] = useState();\n    const [workExperince, setWorkExperince] = useState();\n\n  \n    console.log(selectedValue);\n    console.log(page)\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    \n    const handleSubmit = (e) => {\n        \n        e.preventDefault()\n        const userObject = {\n            jobTitle: jobTitle,\n            jobDescription: jobDescription,\n            location: location,\n            jobType: selectedValue,\n            workExperince: workExperince\n\n        };\n        console.log(userObject)\n\n        axios.post('http://0.0.0.0:5000/create', userObject)\n            .then((res) => {\n                console.log(res.data)\n            }).catch((error) => {\n                console.log(error)\n            });\n        \n\n        \n    }\n\n    if(activeStep === 0) {\n            \n        return (\n           \n           \n                <div>\n                   \n                    <SplitPane split=\"vertical\" minSize={100}\n                                defaultSize={300}\n                                resizerStyle={styles}>\n                        \n                             {/* <div >\n                                <Box mt={5} ml={5}>\n                                    <h2 style={{ color: '#3E3F3F' }}>Posting Setup</h2>\n                                </Box>\n            \n                                <Box mt={0} ml={7}>\n                                    <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <LooksOneIcon fontSize=\"large\" style={{ color: 'green' }} />\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Description</h3>\n                                    </div>  \n                                   \n                                </Box>\n                                <Box mt={0} ml={7}>\n                                    <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <LooksTwoIcon fontSize=\"large\"/>\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Location</h3>\n                                    </div>  \n                                    {/* <h3 style={{ color: '#A6A6A6' }}>Location</h3> */}\n                                {/* </Box>\n                                <Box mt={0} ml={7}>\n                                <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <Looks3Icon fontSize=\"large\"/>\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Question</h3>\n                                    </div>  \n                                    {/* <h3 style={{ color: '#A6A6A6' }}>Question</h3> */}\n                                {/* </Box>\n                                \n                            </div>   */}\n                            <div className={classes.root}>\n                            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                              {steps.map((label, index) => (\n                                <Step key={label}>\n                                  <StepLabel>{label}</StepLabel>\n                                  <StepContent>\n                                    <Typography>{getStepContent(index)}</Typography>\n                                    <div className={classes.actionsContainer}>\n                                      <div>\n                                        <Button\n                                          disabled={activeStep === 0}\n                                          onClick={handleBack}\n                                          className={classes.button}\n                                        >\n                                          Back\n                                        </Button>\n                                        <Button\n                                          variant=\"contained\"\n                                          color=\"primary\"\n                                          onClick={handleNext}\n                                          className={classes.button}\n                                          size=\"large\" \n                                        //   onClick={() => handleNext}\n                                          value={1}\n                                        >\n                                          {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        \n                                      </div>\n                                    </div>\n                                  </StepContent>\n                                </Step>\n                              ))}\n                            </Stepper>\n                            {activeStep === steps.length && (\n                              <Paper square elevation={0} className={classes.resetContainer}>\n                                <Typography>All steps completed - you&apos;re finished</Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                  Reset\n                                </Button>\n                              </Paper>\n                            )}\n                          </div>\n                            <div >\n                                <Box mt={5} ml={5}>\n                                    <Typography variant=\"h3\">Write Your Job Posting</Typography>\n                                </Box>\n                                {/* <ColoredLine color=\"black\" /> */}\n                                <Box ml={2} mt={1}> \n                                    <View\n                                        style={{\n                                        borderBottomColor: '#E1E1E1',\n                                        borderBottomWidth: 2,\n                                        width: \"95%\",\n                                        alignItems:'left',\n                                    }}\n                                \n                                /></Box>\n                                <Box mt={4} ml={5}>\n                                    <Typography variant=\"h7\">JOB TITLE</Typography>\n                                </Box>\n                                <Box mt={2} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Required\"\n                                    value = {jobTitle}\n                                    onChange={(e) => setTitle(e.target.value) }\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                                </Box>\n            \n                                <Box mt={-11.3} ml={90}>\n                                    <Typography variant=\"h7\">JOB TYPE</Typography>\n                                </Box>\n                                <Box mt={1} ml={89}>\n                                    <GreenRadio\n                                        checked={{selectedValue} === 'a'}\n                                        onChange={() => setSelectedValue('a')}\n                                    \n                                        name=\"radio-button-demo\"\n                                        inputProps={{ 'aria-label': 'A' }}\n                                    />\n                                    <Typography variant=\"h7\">PART-TIME</Typography>\n                                    <GreenRadio\n                                        checked={{selectedValue} === 'b'}\n                                        onChange={() => setSelectedValue('b')}\n                                        \n                                        name=\"radio-button-demo\"\n                                        inputProps={{ 'aria-label': 'B' }}\n                                    />\n                                    <Typography variant=\"h7\">FULL-TIME</Typography>\n                                </Box>\n                                <Box mt={7} ml={5}>\n                                    <Typography>JOB DESCRIPTION</Typography>\n                                </Box>\n                                <Box mt={2} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Required\"\n                                    value = {jobDescription}\n                                    onChange={(e) => setDescription(e.target.value) }\n                                    multiline\n                                    rows={15}\n                                    variant=\"outlined\"\n                                    style = {{width: 1000}}\n                                    />\n                                </Box>\n                                \n                                <Box ml={2} mt={6}> \n                                    <View\n                                        style={{\n                                        borderBottomColor: '#E1E1E1',\n                                        borderBottomWidth: 2,\n                                        width: \"95%\",\n                                        alignItems:'left',\n                                    }}\n                                \n                                /></Box>\n                                <Box ml={120} mt={1}>\n                                    <MuiThemeProvider theme={greenTheme}>\n            \n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => setPageNumber(2)}\n                                        value={1}>CONTINUE</Button>\n                                    </MuiThemeProvider>\n                                </Box>\n                                \n                                \n            \n                            \n                            </div>\n                        </SplitPane>\n                     \n                </div>\n        )\n    }\n    \n    // console.log(jobTitle);\n    if(activeStep === 1) {\n        return (\n            <div>\n            <SplitPane split=\"vertical\" minSize={100}\n                        defaultSize={300}\n                        resizerStyle={styles}>\n                \n                     \n                     <div className={classes.root}>\n                     <Stepper activeStep={activeStep} orientation=\"vertical\">\n                       {steps.map((label, index) => (\n                         <Step key={label}>\n                           <StepLabel>{label}</StepLabel>\n                           <StepContent>\n                             <Typography>{getStepContent(index)}</Typography>\n                             <div className={classes.actionsContainer}>\n                               <div>\n                                 <Button\n                                   disabled={activeStep === 0}\n                                   onClick={handleBack}\n                                   className={classes.button}\n                                 >\n                                   Back\n                                 </Button>\n                                 <Button\n                                   variant=\"contained\"\n                                   color=\"primary\"\n                                   onClick={handleNext}\n                                   className={classes.button}\n                                   size=\"large\" \n                                 //   onClick={() => handleNext}\n                                   value={1}\n                                 >\n                                   {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                 </Button>\n                                 \n                               </div>\n                             </div>\n                           </StepContent>\n                         </Step>\n                       ))}\n                     </Stepper>\n                     {activeStep === steps.length && (\n                       <Paper square elevation={0} className={classes.resetContainer}>\n                         <Typography>All steps completed - you&apos;re finished</Typography>\n                         <Button onClick={handleReset} className={classes.button}>\n                           Reset\n                         </Button>\n                       </Paper>\n                     )}\n                   </div>\n                    <div>\n                        {/* <Box mt={5} ml={5}>\n                            <Typography variant=\"h3\">Where will be they working?</Typography>\n                        </Box> */}\n                        \n                        <Box ml={2} mt={1}> \n                            <View\n                                style={{\n                                borderBottomColor: '#E1E1E1',\n                                borderBottomWidth: 2,\n                                width: \"95%\",\n                                alignItems:'left',\n                            }}\n                                    \n                        /></Box>\n                        <Box mt={4} ml={5}>\n                       \n                            <Typography variant=\"h7\">LOCATION</Typography>\n                              \n                        </Box>\n                        <Box mt={4} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"\"\n                                    label=\"Required\"\n                                    value = {location}\n                                    onChange={(e) => setLocation(e.target.value)}\n                                    defaultValue=\"Location\"\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                        </Box>\n                        <Box mt={4} ml={5}>\n                       \n                       <Typography variant=\"h7\">WORK EXPERINCE</Typography>\n                         \n                        </Box>\n                        <Box mt={4} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"\"\n                                    label=\"Required\"\n                                    value = {workExperince}\n                                    onChange={(e) => setWorkExperince(e.target.value)}\n                                    defaultValue=\"Work Experince\"\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                        </Box>\n                        <Box ml={2} mt={48}> \n                            <View\n                                style={{\n                                borderBottomColor: '#E1E1E1',\n                                borderBottomWidth: 2,\n                                width: \"95%\",\n                                alignItems:'left',\n                            }}\n                                \n                        /></Box>\n                        <Box ml={120} mt={1}>\n                            <MuiThemeProvider theme={greenTheme}>\n    \n                                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => setPageNumber(3)}\n                                value={1}>CONTINUE</Button>\n                            </MuiThemeProvider>\n                        </Box>\n                    </div>\n                    </SplitPane>\n            </div>\n        )\n    }\n    // console.log(location)\n    if(activeStep === 2) {\n        return (\n            <div>\n                \n            <SplitPane split=\"vertical\" minSize={100}\n                        defaultSize={300}\n                        resizerStyle={styles}>\n                \n                     \n                     <div className={classes.root}>\n                     <Stepper activeStep={activeStep} orientation=\"vertical\">\n                       {steps.map((label, index) => (\n                         <Step key={label}>\n                           <StepLabel>{label}</StepLabel>\n                           <StepContent>\n                             <Typography>{getStepContent(index)}</Typography>\n                             <div className={classes.actionsContainer}>\n                               <div>\n                                 <Button\n                                   disabled={activeStep === 0}\n                                   onClick={handleBack}\n                                   className={classes.button}\n                                 >\n                                   Back\n                                 </Button>\n                                 <Button\n                                   variant=\"contained\"\n                                   color=\"primary\"\n                                   onClick={handleNext}\n                                   className={classes.button}\n                                   size=\"large\" \n                                 //   onClick={() => handleNext}\n                                   value={1}\n                                 >\n                                   {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                 </Button>\n                                 \n                               </div>\n                             </div>\n                           </StepContent>\n                         </Step>\n                       ))}\n                     </Stepper>\n                     {activeStep === steps.length && (\n                       <Paper square elevation={0} className={classes.resetContainer}>\n                         <Typography>All steps completed - you&apos;re finished</Typography>\n                         <Button onClick={handleReset} className={classes.button}>\n                           Reset\n                         </Button>\n                       </Paper>\n                     )}\n                   </div>\n                <form onSubmit={handleSubmit}>\n                <Box ml={120} mt={1}>\n                    <MuiThemeProvider theme={greenTheme}>\n\n                        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" size=\"large\">POST JOB</Button>\n                    </MuiThemeProvider>\n                </Box>\n                </form>\n                </SplitPane>\n            </div>\n        )\n    }\n    \n    \n    \n}  \n"]},"metadata":{},"sourceType":"module"}