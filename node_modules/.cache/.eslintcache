[{"/Users/apple/Desktop/Programming-Project/src/index.js":"1","/Users/apple/Desktop/Programming-Project/src/reportWebVitals.js":"2","/Users/apple/Desktop/Programming-Project/src/App.js":"3","/Users/apple/Desktop/Programming-Project/src/Components/Hire.js":"4","/Users/apple/Desktop/Programming-Project/src/Components/AppBar.js":"5","/Users/apple/Desktop/Programming-Project/src/Components/CreatePost.js":"6","/Users/apple/Desktop/Programming-Project-1/src/index.js":"7","/Users/apple/Desktop/Programming-Project-1/src/App.js":"8","/Users/apple/Desktop/Programming-Project-1/src/reportWebVitals.js":"9","/Users/apple/Desktop/Programming-Project-1/src/Components/AppBar.js":"10","/Users/apple/Desktop/Programming-Project-1/src/Components/Hire.js":"11","/Users/apple/Desktop/Programming-Project-1/src/Components/Dashboard.js":"12","/Users/apple/Desktop/Programming-Project-1/src/Components/CreatePost.js":"13"},{"size":500,"mtime":1617418607025,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1617418607026,"results":"16","hashOfConfig":"15"},{"size":810,"mtime":1617418607025,"results":"17","hashOfConfig":"15"},{"size":7508,"mtime":1617432818227,"results":"18","hashOfConfig":"15"},{"size":5141,"mtime":1617418607025,"results":"19","hashOfConfig":"15"},{"size":22873,"mtime":1617419584128,"results":"20","hashOfConfig":"15"},{"size":500,"mtime":1617418607025,"results":"21","hashOfConfig":"22"},{"size":725,"mtime":1617435856092,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1617418607026,"results":"24","hashOfConfig":"22"},{"size":5054,"mtime":1617435906204,"results":"25","hashOfConfig":"22"},{"size":7524,"mtime":1617442153937,"results":"26","hashOfConfig":"22"},{"size":2399,"mtime":1617445359929,"results":"27","hashOfConfig":"22"},{"size":22872,"mtime":1617442107160,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"vmori0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"1euwe9d",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/apple/Desktop/Programming-Project/src/index.js",[],["58","59"],"/Users/apple/Desktop/Programming-Project/src/reportWebVitals.js",[],"/Users/apple/Desktop/Programming-Project/src/App.js",[],"/Users/apple/Desktop/Programming-Project/src/Components/Hire.js",["60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78"],"/Users/apple/Desktop/Programming-Project/src/Components/AppBar.js",[],"/Users/apple/Desktop/Programming-Project/src/Components/CreatePost.js",["79","80","81","82","83","84","85","86","87","88","89"],"import React, { Component,useState, useEffect  } from 'react'\nimport Box from '@material-ui/core/Box';\nimport SplitPane, { Pane } from 'react-split-pane';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport LooksOneIcon from '@material-ui/icons/LooksOne';\nimport LooksTwoIcon from '@material-ui/icons/LooksTwo';\nimport Looks3Icon from '@material-ui/icons/Looks3';\nimport { Typography } from '@material-ui/core';\nimport { MuiThemeProvider, ThemeProvider, createMuiTheme,makeStyles,withStyles} from \"@material-ui/core/styles\";\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport {StyleSheet,View } from 'react-native';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\n\nconst greenTheme = createMuiTheme({\n    palette: {\n      primary: { main: \"#008000\", contrastText: \"#fff\" },\n    //   secondary: { main: \"#03a9f4\", contrastText: \"#fff\" }\n    }\n});\n// const greenTheme = createMuiTheme({ palette: { primary: green, contrastText: \"#fff\" } })\nconst styles = {\n    background: '#E1E1E1',\n    width: '2px',\n    cursor: 'col-resize',\n    margin: '0 1px',\n    height: '100%',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n}));\n  \n\nconst GreenRadio = withStyles({\n    root: {\n      color: green[400],\n      '&$checked': {\n        color: green[600],\n      },\n    },\n    checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n  \nconst stylesBorder = StyleSheet.create({\n    viewStyleForLine: {\n        borderBottomColor: \"black\", \n        borderBottomWidth: StyleSheet.hairlineWidth, \n        alignSelf:'stretch',\n        width: \"100%\"\n      }\n})\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5\n        }}\n    />\n);\nconst theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        'Josefin Sans',\n        'sans-serif',\n      ].join(','),\n},});\n\nfunction getSteps() {\n    return ['Select campaign settings', 'Create an ad group', 'Create an ad'];\n}\n  \nfunction getStepContent(step) {\n    switch (step) {\n      case 0:\n        return `For each ad campaign that you create, you can control how much`;\n      case 1:\n        return 'An ad group contains one or more ads which target a shared set of keywords.';\n      case 2:\n        return `they're running and how to resolve approval issues.`;\n      default:\n        return 'Unknown step';\n    }\n}\n  \nexport default function CreatePost() {\n    const [page, setPageNumber] = useState(1);\n    const [selectedValue, setSelectedValue] = useState('a');\n\n    const [jobTitle, setTitle] = useState();\n    const [jobDescription, setDescription] = useState();\n    const [location, setLocation] = useState();\n    const [workExperince, setWorkExperince] = useState();\n\n  \n    console.log(selectedValue);\n    console.log(page)\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    \n    const handleSubmit = (e) => {\n        \n        e.preventDefault()\n        const userObject = {\n            jobTitle: jobTitle,\n            jobDescription: jobDescription,\n            location: location,\n            jobType: selectedValue,\n            workExperince: workExperince\n\n        };\n        console.log(userObject)\n\n        axios.post('http://0.0.0.0:5000/create', userObject)\n            .then((res) => {\n                console.log(res.data)\n            }).catch((error) => {\n                console.log(error)\n            });\n        \n\n        \n    }\n\n    if(activeStep === 0) {\n            \n        return (\n           \n           \n                <div>\n                   \n                    <SplitPane split=\"vertical\" minSize={100}\n                                defaultSize={300}\n                                resizerStyle={styles}>\n                        \n                             {/* <div >\n                                <Box mt={5} ml={5}>\n                                    <h2 style={{ color: '#3E3F3F' }}>Posting Setup</h2>\n                                </Box>\n            \n                                <Box mt={0} ml={7}>\n                                    <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <LooksOneIcon fontSize=\"large\" style={{ color: 'green' }} />\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Description</h3>\n                                    </div>  \n                                   \n                                </Box>\n                                <Box mt={0} ml={7}>\n                                    <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <LooksTwoIcon fontSize=\"large\"/>\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Location</h3>\n                                    </div>  \n                                    {/* <h3 style={{ color: '#A6A6A6' }}>Location</h3> */}\n                                {/* </Box>\n                                <Box mt={0} ml={7}>\n                                <div style={{\n                                        display: 'flex',\n                                        alignItems: 'center',\n                                        flexWrap: 'wrap',\n                                    }}>\n                                        <Looks3Icon fontSize=\"large\"/>\n                                        <h3 style={{ color: '#A6A6A6' }}>&nbsp;&nbsp;Question</h3>\n                                    </div>  \n                                    {/* <h3 style={{ color: '#A6A6A6' }}>Question</h3> */}\n                                {/* </Box>\n                                \n                            </div>   */}\n                            <div className={classes.root}>\n                            <Stepper activeStep={activeStep} orientation=\"vertical\">\n                              {steps.map((label, index) => (\n                                <Step key={label}>\n                                  <StepLabel>{label}</StepLabel>\n                                  <StepContent>\n                                    <Typography>{getStepContent(index)}</Typography>\n                                    <div className={classes.actionsContainer}>\n                                      <div>\n                                        <Button\n                                          disabled={activeStep === 0}\n                                          onClick={handleBack}\n                                          className={classes.button}\n                                        >\n                                          Back\n                                        </Button>\n                                        <Button\n                                          variant=\"contained\"\n                                          color=\"primary\"\n                                          onClick={handleNext}\n                                          className={classes.button}\n                                          size=\"large\" \n                                        //   onClick={() => handleNext}\n                                          value={1}\n                                        >\n                                          {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                        </Button>\n                                        \n                                      </div>\n                                    </div>\n                                  </StepContent>\n                                </Step>\n                              ))}\n                            </Stepper>\n                            {activeStep === steps.length && (\n                              <Paper square elevation={0} className={classes.resetContainer}>\n                                <Typography>All steps completed - you&apos;re finished</Typography>\n                                <Button onClick={handleReset} className={classes.button}>\n                                  Reset\n                                </Button>\n                              </Paper>\n                            )}\n                          </div>\n                            <div >\n                                <Box mt={5} ml={5}>\n                                    <Typography variant=\"h3\">Write Your Job Posting</Typography>\n                                </Box>\n                                {/* <ColoredLine color=\"black\" /> */}\n                                <Box ml={2} mt={1}> \n                                    <View\n                                        style={{\n                                        borderBottomColor: '#E1E1E1',\n                                        borderBottomWidth: 2,\n                                        width: \"95%\",\n                                        alignItems:'left',\n                                    }}\n                                \n                                /></Box>\n                                <Box mt={4} ml={5}>\n                                    <Typography variant=\"h7\">JOB TITLE</Typography>\n                                </Box>\n                                <Box mt={2} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Required\"\n                                    value = {jobTitle}\n                                    onChange={(e) => setTitle(e.target.value) }\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                                </Box>\n            \n                                <Box mt={-11.3} ml={90}>\n                                    <Typography variant=\"h7\">JOB TYPE</Typography>\n                                </Box>\n                                <Box mt={1} ml={89}>\n                                    <GreenRadio\n                                        checked={{selectedValue} === 'a'}\n                                        onChange={() => setSelectedValue('a')}\n                                    \n                                        name=\"radio-button-demo\"\n                                        inputProps={{ 'aria-label': 'A' }}\n                                    />\n                                    <Typography variant=\"h7\">PART-TIME</Typography>\n                                    <GreenRadio\n                                        checked={{selectedValue} === 'b'}\n                                        onChange={() => setSelectedValue('b')}\n                                        \n                                        name=\"radio-button-demo\"\n                                        inputProps={{ 'aria-label': 'B' }}\n                                    />\n                                    <Typography variant=\"h7\">FULL-TIME</Typography>\n                                </Box>\n                                <Box mt={7} ml={5}>\n                                    <Typography>JOB DESCRIPTION</Typography>\n                                </Box>\n                                <Box mt={2} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"outlined-required\"\n                                    label=\"Required\"\n                                    value = {jobDescription}\n                                    onChange={(e) => setDescription(e.target.value) }\n                                    multiline\n                                    rows={15}\n                                    variant=\"outlined\"\n                                    style = {{width: 1000}}\n                                    />\n                                </Box>\n                                \n                                <Box ml={2} mt={6}> \n                                    <View\n                                        style={{\n                                        borderBottomColor: '#E1E1E1',\n                                        borderBottomWidth: 2,\n                                        width: \"95%\",\n                                        alignItems:'left',\n                                    }}\n                                \n                                /></Box>\n                                <Box ml={120} mt={1}>\n                                    <MuiThemeProvider theme={greenTheme}>\n            \n                                        <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => setPageNumber(2)}\n                                        value={1}>CONTINUE</Button>\n                                    </MuiThemeProvider>\n                                </Box>\n                                \n                                \n            \n                            \n                            </div>\n                        </SplitPane>\n                     \n                </div>\n        )\n    }\n    \n    // console.log(jobTitle);\n    if(activeStep === 1) {\n        return (\n            <div>\n            <SplitPane split=\"vertical\" minSize={100}\n                        defaultSize={300}\n                        resizerStyle={styles}>\n                \n                     \n                     <div className={classes.root}>\n                     <Stepper activeStep={activeStep} orientation=\"vertical\">\n                       {steps.map((label, index) => (\n                         <Step key={label}>\n                           <StepLabel>{label}</StepLabel>\n                           <StepContent>\n                             <Typography>{getStepContent(index)}</Typography>\n                             <div className={classes.actionsContainer}>\n                               <div>\n                                 <Button\n                                   disabled={activeStep === 0}\n                                   onClick={handleBack}\n                                   className={classes.button}\n                                 >\n                                   Back\n                                 </Button>\n                                 <Button\n                                   variant=\"contained\"\n                                   color=\"primary\"\n                                   onClick={handleNext}\n                                   className={classes.button}\n                                   size=\"large\" \n                                 //   onClick={() => handleNext}\n                                   value={1}\n                                 >\n                                   {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                 </Button>\n                                 \n                               </div>\n                             </div>\n                           </StepContent>\n                         </Step>\n                       ))}\n                     </Stepper>\n                     {activeStep === steps.length && (\n                       <Paper square elevation={0} className={classes.resetContainer}>\n                         <Typography>All steps completed - you&apos;re finished</Typography>\n                         <Button onClick={handleReset} className={classes.button}>\n                           Reset\n                         </Button>\n                       </Paper>\n                     )}\n                   </div>\n                    <div>\n                        {/* <Box mt={5} ml={5}>\n                            <Typography variant=\"h3\">Where will be they working?</Typography>\n                        </Box> */}\n                        \n                        <Box ml={2} mt={1}> \n                            <View\n                                style={{\n                                borderBottomColor: '#E1E1E1',\n                                borderBottomWidth: 2,\n                                width: \"95%\",\n                                alignItems:'left',\n                            }}\n                                    \n                        /></Box>\n                        <Box mt={4} ml={5}>\n                       \n                            <Typography variant=\"h7\">LOCATION</Typography>\n                              \n                        </Box>\n                        <Box mt={4} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"\"\n                                    label=\"Required\"\n                                    value = {location}\n                                    onChange={(e) => setLocation(e.target.value)}\n                                    defaultValue=\"Location\"\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                        </Box>\n                        <Box mt={4} ml={5}>\n                       \n                       <Typography variant=\"h7\">WORK EXPERINCE</Typography>\n                         \n                        </Box>\n                        <Box mt={4} ml={5}>\n                                <TextField\n                                    required\n                                    id=\"\"\n                                    label=\"Required\"\n                                    value = {workExperince}\n                                    onChange={(e) => setWorkExperince(e.target.value)}\n                                    defaultValue=\"Work Experince\"\n                                    variant=\"outlined\"\n                                    style = {{width: 500}}\n                                    />\n                        </Box>\n                        <Box ml={2} mt={48}> \n                            <View\n                                style={{\n                                borderBottomColor: '#E1E1E1',\n                                borderBottomWidth: 2,\n                                width: \"95%\",\n                                alignItems:'left',\n                            }}\n                                \n                        /></Box>\n                        <Box ml={120} mt={1}>\n                            <MuiThemeProvider theme={greenTheme}>\n    \n                                <Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={() => setPageNumber(3)}\n                                value={1}>CONTINUE</Button>\n                            </MuiThemeProvider>\n                        </Box>\n                    </div>\n                    </SplitPane>\n            </div>\n        )\n    }\n    // console.log(location)\n    if(activeStep === 2) {\n        return (\n            <div>\n                \n            <SplitPane split=\"vertical\" minSize={100}\n                        defaultSize={300}\n                        resizerStyle={styles}>\n                \n                     \n                     <div className={classes.root}>\n                     <Stepper activeStep={activeStep} orientation=\"vertical\">\n                       {steps.map((label, index) => (\n                         <Step key={label}>\n                           <StepLabel>{label}</StepLabel>\n                           <StepContent>\n                             <Typography>{getStepContent(index)}</Typography>\n                             <div className={classes.actionsContainer}>\n                               <div>\n                                 <Button\n                                   disabled={activeStep === 0}\n                                   onClick={handleBack}\n                                   className={classes.button}\n                                 >\n                                   Back\n                                 </Button>\n                                 <Button\n                                   variant=\"contained\"\n                                   color=\"primary\"\n                                   onClick={handleNext}\n                                   className={classes.button}\n                                   size=\"large\" \n                                 //   onClick={() => handleNext}\n                                   value={1}\n                                 >\n                                   {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                 </Button>\n                                 \n                               </div>\n                             </div>\n                           </StepContent>\n                         </Step>\n                       ))}\n                     </Stepper>\n                     {activeStep === steps.length && (\n                       <Paper square elevation={0} className={classes.resetContainer}>\n                         <Typography>All steps completed - you&apos;re finished</Typography>\n                         <Button onClick={handleReset} className={classes.button}>\n                           Reset\n                         </Button>\n                       </Paper>\n                     )}\n                   </div>\n                <form onSubmit={handleSubmit}>\n                <Box ml={120} mt={1}>\n                    <MuiThemeProvider theme={greenTheme}>\n\n                        <Button onClick={handleSubmit} variant=\"contained\" color=\"primary\" size=\"large\">POST JOB</Button>\n                    </MuiThemeProvider>\n                </Box>\n                </form>\n                </SplitPane>\n            </div>\n        )\n    }\n    \n    \n    \n}  \n","/Users/apple/Desktop/Programming-Project-1/src/index.js",[],["90","91"],"/Users/apple/Desktop/Programming-Project-1/src/App.js",[],"/Users/apple/Desktop/Programming-Project-1/src/reportWebVitals.js",[],"/Users/apple/Desktop/Programming-Project-1/src/Components/AppBar.js",[],"/Users/apple/Desktop/Programming-Project-1/src/Components/Hire.js",["92","93","94","95","96","97","98","99","100"],"/Users/apple/Desktop/Programming-Project-1/src/Components/Dashboard.js",["101","102","103","104"],"/Users/apple/Desktop/Programming-Project-1/src/Components/CreatePost.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":35},{"ruleId":"109","severity":1,"message":"114","line":1,"column":37,"nodeType":"111","messageId":"112","endLine":1,"endColumn":46},{"ruleId":"109","severity":1,"message":"115","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"116","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":19},{"ruleId":"109","severity":1,"message":"117","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"118","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"119","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":22},{"ruleId":"109","severity":1,"message":"120","line":15,"column":8,"nodeType":"111","messageId":"112","endLine":15,"endColumn":17},{"ruleId":"109","severity":1,"message":"121","line":17,"column":8,"nodeType":"111","messageId":"112","endLine":17,"endColumn":13},{"ruleId":"109","severity":1,"message":"122","line":18,"column":8,"nodeType":"111","messageId":"112","endLine":18,"endColumn":14},{"ruleId":"109","severity":1,"message":"123","line":25,"column":7,"nodeType":"111","messageId":"112","endLine":25,"endColumn":22},{"ruleId":"109","severity":1,"message":"124","line":35,"column":9,"nodeType":"111","messageId":"112","endLine":35,"endColumn":23},{"ruleId":"109","severity":1,"message":"125","line":47,"column":9,"nodeType":"111","messageId":"112","endLine":47,"endColumn":13},{"ruleId":"109","severity":1,"message":"126","line":85,"column":11,"nodeType":"111","messageId":"112","endLine":85,"endColumn":23},{"ruleId":"109","severity":1,"message":"127","line":88,"column":9,"nodeType":"111","messageId":"112","endLine":88,"endColumn":19},{"ruleId":"109","severity":1,"message":"128","line":94,"column":11,"nodeType":"111","messageId":"112","endLine":94,"endColumn":19},{"ruleId":"109","severity":1,"message":"129","line":102,"column":11,"nodeType":"111","messageId":"112","endLine":102,"endColumn":18},{"ruleId":"109","severity":1,"message":"130","line":109,"column":19,"nodeType":"111","messageId":"112","endLine":109,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"114","line":1,"column":37,"nodeType":"111","messageId":"112","endLine":1,"endColumn":46},{"ruleId":"109","severity":1,"message":"131","line":3,"column":21,"nodeType":"111","messageId":"112","endLine":3,"endColumn":25},{"ruleId":"109","severity":1,"message":"132","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":20},{"ruleId":"109","severity":1,"message":"134","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":20},{"ruleId":"109","severity":1,"message":"135","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":18},{"ruleId":"109","severity":1,"message":"136","line":9,"column":28,"nodeType":"111","messageId":"112","endLine":9,"endColumn":41},{"ruleId":"109","severity":1,"message":"137","line":64,"column":7,"nodeType":"111","messageId":"112","endLine":64,"endColumn":19},{"ruleId":"109","severity":1,"message":"138","line":72,"column":7,"nodeType":"111","messageId":"112","endLine":72,"endColumn":18},{"ruleId":"109","severity":1,"message":"139","line":81,"column":7,"nodeType":"111","messageId":"112","endLine":81,"endColumn":12},{"ruleId":"105","replacedBy":"140"},{"ruleId":"107","replacedBy":"141"},{"ruleId":"109","severity":1,"message":"123","line":25,"column":7,"nodeType":"111","messageId":"112","endLine":25,"endColumn":22},{"ruleId":"109","severity":1,"message":"124","line":35,"column":9,"nodeType":"111","messageId":"112","endLine":35,"endColumn":23},{"ruleId":"109","severity":1,"message":"125","line":47,"column":9,"nodeType":"111","messageId":"112","endLine":47,"endColumn":13},{"ruleId":"109","severity":1,"message":"142","line":83,"column":12,"nodeType":"111","messageId":"112","endLine":83,"endColumn":19},{"ruleId":"109","severity":1,"message":"143","line":83,"column":21,"nodeType":"111","messageId":"112","endLine":83,"endColumn":31},{"ruleId":"109","severity":1,"message":"126","line":85,"column":11,"nodeType":"111","messageId":"112","endLine":85,"endColumn":23},{"ruleId":"109","severity":1,"message":"127","line":88,"column":9,"nodeType":"111","messageId":"112","endLine":88,"endColumn":19},{"ruleId":"109","severity":1,"message":"128","line":94,"column":11,"nodeType":"111","messageId":"112","endLine":94,"endColumn":19},{"ruleId":"109","severity":1,"message":"129","line":102,"column":11,"nodeType":"111","messageId":"112","endLine":102,"endColumn":18},{"ruleId":"109","severity":1,"message":"144","line":9,"column":5,"nodeType":"111","messageId":"112","endLine":9,"endColumn":14},{"ruleId":"109","severity":1,"message":"145","line":10,"column":5,"nodeType":"111","messageId":"112","endLine":10,"endColumn":16},{"ruleId":"109","severity":1,"message":"146","line":14,"column":8,"nodeType":"111","messageId":"112","endLine":14,"endColumn":14},{"ruleId":"109","severity":1,"message":"147","line":24,"column":7,"nodeType":"111","messageId":"112","endLine":24,"endColumn":19},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'forwardRef' is defined but never used.","'CardContent' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'Paper' is defined but never used.","'Switch' is defined but never used.","'StyledTableCell' is assigned a value but never used.","'StyledTableRow' is assigned a value but never used.","'rows' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'deleteIcon' is assigned a value but never used.","'editIcon' is assigned a value but never used.","'dataJob' is assigned a value but never used.","'allData' is assigned a value but never used.","'Pane' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'LooksOneIcon' is defined but never used.","'LooksTwoIcon' is defined but never used.","'Looks3Icon' is defined but never used.","'ThemeProvider' is defined but never used.","'stylesBorder' is assigned a value but never used.","'ColoredLine' is assigned a value but never used.","'theme' is assigned a value but never used.",["148"],["149"],"'jobData' is assigned a value but never used.","'setJobData' is assigned a value but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Avatar' is defined but never used.","'defaultProps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]